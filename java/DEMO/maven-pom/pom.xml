<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
    <modelVersion>4.0.0</modelVersion>
    <groupId>vip.xjdai</groupId>
    <artifactId>maven-pom</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <!-- 打包类型 -->
    <packaging>war</packaging>


    <build>
        <plugins>
            <!-- 在执行install的时候会打包源码源代码打包插件 -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <attach>true</attach>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <!-- 要绑定到的生命周期的阶段，表示在编译的时候运行此插件 -->
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <!-- 跳过单元测试 -->
            <!-- 如果单元测试中有输出中文，eclipse的控制台里中文可能会变成乱码输出，也可以通过这个插件解决 -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <!-- 忽略测试异常 -->
                    <testFailureIgnore>true</testFailureIgnore>
                    <!-- 是否跳过测试阶段，方式2 -->
                    <skip>true</skip>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                    <!-- 改变测试报告生成目录 -->
                    <reportsDirectory>${project.build.directory}/test-reports</reportsDirectory>
                    <includes>
                        <include>**/*Test*.java</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>