<?xml version="1.0" encoding="UTF-8"?>

<configuration>

    <!--定义日志文件的存储地址 -->
    <property name="LOG_HOME" value="/home/logs/customer"/>
    <!--定义日志文件的存储地址 -->
    <property name="CHARSET" value="UTF-8"/>
    <!-- 文件大小 -->
    <property name="LOG_SIZE" value="30MB"/>
    <!-- 表示只保留最近 10 天的日志 -->
    <property name="MAX_HISTORY" value="10"/>
    <!-- 控制台输出格式化 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!-- 文件输出格式 -->
    <property name="FILE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}) %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]) %clr(%-40.40logger{39}) %clr(:) %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CHARSET}</charset>
        </encoder>
        <!--此日志appender是为开发使用，只配置最底级别 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
    </appender>


    <!-- RollingFileAppender：
        滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <appender name="syslog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志输出的路径 -->
        <File>${LOG_HOME}</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名 -->
            <fileNamePattern>log/sys.%d.%i.log</fileNamePattern>
            <!-- 日志保存天数 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
            <!-- 设置滚动策略，当天的日志大小超过 ${LOG_SIZE} 文件大小时候，新的内容写入新的文件， 默认10MB -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${LOG_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 设置格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>${CHARSET}</charset>
        </encoder>
    </appender>


    <!-- mybatis -->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
    <!-- spirng -->
    <logger name="org.springframework" level="ERROR"/>
    <!-- commons -->
    <logger name="org.apache.commons" level="ERROR"/>
    <!-- dubbo/zookeeper -->
    <logger name="org.apache.zookeeper" level="ERROR"/>
    <logger name="com.alibaba.dubbo.monitor" level="ERROR"/>
    <logger name="com.alibaba.dubbo.remoting" level="ERROR"/>
    <!-- hibernate sql 专为 Hibernate 定制的日志打印 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG"/>
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG"/>
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG"/>

    <!-- package为根包，也就是只要是发生在这个根包下面的所有日志操作行为的权限都是DEBUG -->
    <root name="package" level="info">
        <appender-ref ref="STDOUT"/>
    </root>
    <logger name="vip.xjdai" level="DEBUG">
        <appender-ref ref="syslog"/>
    </logger>
    <!-- 日志异步到数据库 -->
    <!-- <appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
        日志异步到数据库
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
        连接池
        <dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <driverClass>com.mysql.jdbc.Driver</driverClass>
        <url>jdbc:mysql://127.0.0.1:3306/databaseName</url>
        <user>root</user>
        <password>root</password>
        </dataSource>
        </connectionSource>
        </appender> -->
</configuration>    