package cn.zingfin.finance.service;

import cn.vihost.farmplatform.core.exception.BizException;
import cn.vihost.farmplatform.core.exception.ExceptionUtil;
import cn.zingfin.finance.repository.dao.${table.serviceName};
import cn.zingfin.finance.repository.entity.${entity};
import cn.zingfin.finance.constants.WebErrorCodeEnums;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import cn.zingfin.finance.constants.WebErrorCodeEnums;

import javax.annotation.Resource;

@Service
@Slf4j
public class ${table.entityName}Service
{

    @Resource
    public ${table.serviceName} ${table.entityPath}Dao;


    /**
  * 保存分类
  *
  * @param ${table.entityPath}
  * @return
  * @throws BizException
  */
    public ${entity} save(${entity} ${table.entityPath}) throws BizException {
        boolean flag = ${table.entityPath}Dao.save(${table.entityPath});
        if (!flag) {
            log.error("category保存失败,request:[{}]", ${table.entityPath});
            throw ExceptionUtil.buildFailException(WebErrorCodeEnums.SAVE_ERROR);
        }
        return ${table.entityPath};
    }


    /**
     * 删除分类
     *
     * @param id
     * @return
     * @throws BizException
     */
    public Boolean remove(Long id) throws BizException {
        boolean flag = ${table.entityPath}Dao.removeById(id);
        if (!flag) {
            log.error("category删除失败,id = {}]", id);
            throw ExceptionUtil.buildFailException(WebErrorCodeEnums.DELETE_ERROR);
        }
        return flag;
    }

    /**
     * 根据ID修改分类
     *
     * @param ${table.entityPath}
     * @return
     * @throws BizException
     */
    public ${entity} modifyById(${entity} ${table.entityPath}) throws BizException {
        boolean flag = ${table.entityPath}Dao.updateById(${table.entityPath});
        if (!flag) {
            log.error("category修改失败,request:[{}]", ${table.entityPath});
            throw ExceptionUtil.buildFailException(WebErrorCodeEnums.UPDATE_ERROR);
        }
        return ${table.entityPath};
    }

    /**
     * 根据ID查询
     *
     * @param id
     * @return
     * @throws BizException
     */
    public ${entity} findById(Long id) throws BizException {
        ${entity} ${table.entityPath} = ${table.entityPath}Dao.getById(id);
        if (${table.entityPath} == null) {
            log.error("category查询失败,id = [{}]", id);
            throw ExceptionUtil.buildFailException(WebErrorCodeEnums.SELECT_ERROR);
        }
        return ${table.entityPath};
    }
}