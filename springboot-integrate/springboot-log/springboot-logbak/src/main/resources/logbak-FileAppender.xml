<?xml version="1.0" encoding="UTF-8"?>
<!--scan ：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。-->
<!--debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" debug="true">
    <!-- 文件大小 -->
    <property name="CODING" value="UTF-8"/>
    <!--定义日志文件的存储地址，相对路径，相对于项目目录下. -->
    <property name="LOG_PATH" value="home/logs/customer"/>
    <!-- 日志文件路径+日期 -->
    <property name="LOG_DIR" value="${LOG_PATH}/customer_%d{yyyy-MM-dd}"/>
    <property name="LOG_FORMAT" value="%d{yyyy年MM月dd日 HH小时mm分钟ss秒} [%15t] [%5p] %70c | %m%n "/>

    <!-- 控制台输出 -->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_FORMAT}</pattern>
            <charset>${CODING}</charset>
        </encoder>
    </appender>

    <!--FileAppender：把日志添加到文件，有以下子节点 -->
    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <!-- 当前输入文件路径，跟src同级目录 -->
        <file>log/file.log</file>
        <!-- 默认append=true，即可追加而非覆盖 -->
        <append>true</append>
        <encoder>
            <pattern>${LOG_FORMAT}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- prudent=true表示日志写入线程安全，会降低效率，默认为false -->
        <prudent>false</prudent>
    </appender>
    <!-- 级别依次为【从高到低】： ERROR > WARN > INFO > DEBUG > TRACE -->
    <!--
        level="输出级别" 配置输出的级别，
        如果<appender>也配置了级别，那么就按照谁的级别高就输出谁的，
        比如：appender配了ERROR 那么root配INFO，那么会按照 appender的输出级别
        比如：root配了ERROR，appender配了INFO，那么会按照 root的输出级别
    -->
    <root level="INFO">
        <appender-ref ref="file"/>
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>